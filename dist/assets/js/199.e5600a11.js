(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{774:function(a,s,t){"use strict";t.r(s);var n=t(32),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("在基本数据类型中，我们可以使用double或者float表示一个浮点数，使用double比较常见，但是在精度要求极高的情况下，比如金额计算，double就会有一个"),t("strong",[a._v("精度丢失")]),a._v("问题。")]),a._v(" "),t("p",[a._v("eg：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.03")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" d2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("300.03")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" d2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),t("p",[a._v("输出：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("300.05999999999995")]),a._v("\n")])])]),t("p",[a._v("各位小伙伴可以尝试一下，两个double的浮点数相加，结果是"),t("code",[a._v("300.05999999999995")]),a._v(" ，结果理应是  "),t("code",[a._v("301.06")]),a._v("。")]),a._v(" "),t("p",[a._v("这就是浮点类型的精度丢失。")]),a._v(" "),t("blockquote",[t("p",[a._v("为什么会有这个问题？")]),a._v(" "),t("p",[a._v("因为计算机中表示的数据是二进制的 0和1，而不是所有的浮点数都能准确地用二进制表示的。")])]),a._v(" "),t("p",[a._v("所以我们在运算"),t("strong",[a._v("高精度")]),a._v("的数据的时候，可以使用 "),t("code",[a._v("java.math.BigDecimal")]),a._v(" 类")]),a._v(" "),t("p",[t("code",[a._v("BigDecimal")]),a._v("可以表示一个任意大小且精度完全准确的浮点数。")]),a._v(" "),t("h2",{attrs:{id:"bigdecimal使用介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal使用介绍"}},[a._v("#")]),a._v(" BigDecimal使用介绍")]),a._v(" "),t("h3",{attrs:{id:"_1、初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、初始化"}},[a._v("#")]),a._v(" 1、初始化")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" num12 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.005"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" num22 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1000000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" num32 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-1000000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("h3",{attrs:{id:"_2、加、减、乘、除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、加、减、乘、除"}},[a._v("#")]),a._v(" 2、加、减、乘、除")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 加法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" result1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 减法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" result2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("subtract")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 乘法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" result3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("multiply")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 除法")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" result5 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("divide")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ROUND_HALF_UP"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 绝对值")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BigDecimal")]),a._v(" result4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("abs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("这里可以看到，"),t("strong",[a._v("除法")]),a._v("是需要用到一个舍入模式的参数，因为一旦除不尽，你没有声明舍入模式，结果是会报错的。")]),a._v(" "),t("h3",{attrs:{id:"_3、八种舍入模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、八种舍入模式"}},[a._v("#")]),a._v(" 3、八种舍入模式")]),a._v(" "),t("p",[a._v("BigDecimal提供了8种舍入方式")]),a._v(" "),t("p",[a._v("1、ROUND_UP： 直接舍入+1")]),a._v(" "),t("p",[a._v("2、ROUND_DOWN： 直接舍去")]),a._v(" "),t("p",[a._v("3、ROUND_CEILING：接近正无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUND_UP 相同;如果为负，则舍入行为与 ROUND_DOWN 相同。\n注意，此舍入模式始终不会减少计算值。")]),a._v(" "),t("p",[a._v("4、ROUND_FLOOR：接近负无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUND_DOWN 相同;如果为负，则舍入行为与 ROUND_UP 相同。\n注意，此舍入模式始终不会增加计算值。")]),a._v(" "),t("p",[a._v("5、"),t("strong",[a._v("ROUND_HALF_UP")]),a._v("：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为向上舍入的舍入模式。\n如果舍弃部分 >= 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同。\n注意，这是我们大多数人在小学时就学过的舍入模式(四舍五入)。")]),a._v(" "),t("p",[a._v("6、ROUND_HALF_DOWN：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为上舍入的舍入模式。\n如果舍弃部分 > 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同(五舍六入)。")]),a._v(" "),t("p",[a._v("7、ROUND_HALF_EVEN：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则向相邻的偶数舍入。\n如果舍弃部分左边的数字为奇数，则舍入行为与 ROUND_HALF_UP 相同;\n如果为偶数，则舍入行为与 ROUND_HALF_DOWN 相同。\n注意，在重复进行一系列计算时，此舍入模式可以将累加错误减到最小。\n此舍入模式也称为“银行家舍入法”，主要在美国使用。四舍六入，五分两种情况。如果前一位为奇数，则入位，否则舍去。以下例子为保留小数点1位，那么这种舍入方式下的结果。\n1.15>1.2 1.25>1.2")]),a._v(" "),t("p",[a._v("8、ROUND_UNNECESSARY：断言请求的操作具有精确的结果，因此不需要舍入。如果对获得精确结果的操作指定此舍入模式，则抛出ArithmeticException。")]),a._v(" "),t("p",[t("strong",[a._v("ROUND_HALF_UP")]),a._v(" 常用，表示四舍五入。")])])}),[],!1,null,null,null);s.default=e.exports}}]);